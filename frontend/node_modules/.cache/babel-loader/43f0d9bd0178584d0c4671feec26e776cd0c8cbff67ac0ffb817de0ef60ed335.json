{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      products: [],\n      newProduct: {\n        productName: '',\n        productPrice: 0,\n        feeRate: 0,\n        account: '',\n        quantity: 0,\n        email: ''\n      }\n    };\n  },\n  methods: {\n    addProduct() {\n      fetch('/api/products', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.newProduct)\n      }).then(response => response.json()).then(data => {\n        // 將後端回傳的新商品資料加入到 products 陣列中\n        this.products.push(data);\n\n        // 清空表單\n        this.newProduct = {\n          productName: '',\n          productPrice: 0,\n          feeRate: 0,\n          account: '',\n          quantity: 0\n        };\n      }).catch(error => {\n        console.error('新增商品時發生錯誤:', error);\n      });\n    },\n    deleteProduct(productId) {\n      // 使用 fetch 發送 DELETE 請求給後端 API\n      fetch(`/api/products/${productId}`, {\n        method: 'DELETE'\n      }).then(response => {\n        // 檢查回應的狀態碼，204 表示成功刪除\n        if (response.status === 204) {\n          // 從 products 陣列中移除已刪除的商品\n          this.products = this.products.filter(product => product.productId !== productId);\n        } else {\n          console.error('刪除商品時發生錯誤');\n        }\n      }).catch(error => {\n        console.error('刪除商品時發生錯誤:', error);\n      });\n    },\n    editProduct(product) {\n      // 顯示編輯表單並填入該商品的資訊\n      this.editProductFormVisible = true;\n      this.editedProduct = {\n        ...product\n      };\n    }\n  },\n  updateProduct() {\n    // 使用 fetch 發送 PUT 請求給後端 API\n    fetch(`/api/products/${this.editedProduct.productId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(this.editedProduct)\n    }).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      } else {\n        throw new Error('更新商品時發生錯誤');\n      }\n    }).then(data => {\n      // 在前端更新商品資料\n      const index = this.products.findIndex(product => product.productId === data.productId);\n      if (index !== -1) {\n        this.products[index] = data;\n      }\n\n      // 關閉編輯表單\n      this.editProductFormVisible = false;\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n};","map":{"version":3,"names":["data","products","newProduct","productName","productPrice","feeRate","account","quantity","email","methods","addProduct","fetch","method","headers","body","JSON","stringify","then","response","json","push","catch","error","console","deleteProduct","productId","status","filter","product","editProduct","editProductFormVisible","editedProduct","updateProduct","Error","index","findIndex"],"sources":["C:\\Users\\User\\Documents\\GitHub\\test\\src\\views\\aa.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <h1>金融商品喜好紀錄系統</h1>\r\n    <div>\r\n      <h2>新增喜好金融商品</h2>\r\n      <form @submit.prevent=\"addProduct\">\r\n        <label for=\"productName\">產品名稱:</label>\r\n        <input type=\"text\" v-model=\"newProduct.productName\" required>\r\n        <br>\r\n        <label for=\"productPrice\">產品價格:</label>\r\n        <input type=\"text\" v-model=\"newProduct.productPrice\" required>\r\n        <br>\r\n        <label for=\"feeRate\">手續費率:</label>\r\n        <input type=\"text\" v-model=\"newProduct.feeRate\" required>\r\n        <br>\r\n        <label for=\"account\">預計要扣款的帳號:</label>\r\n        <input type=\"text\" v-model=\"newProduct.account\" required>\r\n        <br>\r\n        <label for=\"quantity\">購買數量:</label>\r\n        <input type=\"text\" v-model=\"newProduct.quantity\" required>\r\n        <br>\r\n        <button type=\"submit\">新增</button>\r\n      </form>\r\n    </div>\r\n    <div>\r\n      <h2>查詢喜好金融商品清單</h2>\r\n      <table>\r\n        <thead class=\"table mt-4\">\r\n          <tr>\r\n            <th width=\"10%\">產品名稱</th>\r\n            <th width=\"12%\">產品價格</th>\r\n            <th width=\"12%\">手續費率</th>\r\n            <th width=\"12%\">預計扣款總金額</th>\r\n            <th width=\"12%\">總手續費用</th>\r\n            <th width=\"12%\">扣款帳號</th>\r\n            <th width=\"12%\">使用者聯絡電子信箱</th>\r\n            <th width=\"10%\">操作</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"product in products\" :key=\"product.productId\">\r\n            <td>{{ product.productName }}</td>\r\n            <td>{{ product.productPrice }}</td>\r\n            <td>{{ product.feeRate }}</td>\r\n            <td>{{ product.productPrice * product.quantity }}</td>\r\n            <td>{{ product.feeRate * product.productPrice * product.quantity }}</td>\r\n            <td>{{ product.account }}</td>\r\n            <td>{{ product.email }}</td>\r\n            <td>\r\n              <button @click=\"deleteProduct(product.productId)\">刪除</button>\r\n              <button @click=\"editProduct(product)\">編輯</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default{\r\n    \r\n    data() {\r\n    return{\r\n    products: [],\r\n    newProduct: {\r\n        productName: '',\r\n        productPrice: 0,\r\n        feeRate: 0,\r\n        account: '',\r\n        quantity: 0,\r\n        email: '',\r\n    },\r\n    }},\r\n    methods: {\r\n    addProduct() {\r\n        fetch('/api/products', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(this.newProduct),\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          // 將後端回傳的新商品資料加入到 products 陣列中\r\n          this.products.push(data);\r\n\r\n          // 清空表單\r\n          this.newProduct = {\r\n            productName: '',\r\n            productPrice: 0,\r\n            feeRate: 0,\r\n            account: '',\r\n            quantity: 0,\r\n          };\r\n        })\r\n        .catch(error => {\r\n          console.error('新增商品時發生錯誤:', error);\r\n        });\r\n    },\r\n\r\n    deleteProduct(productId) {\r\n        // 使用 fetch 發送 DELETE 請求給後端 API\r\n        fetch(`/api/products/${productId}`, {\r\n          method: 'DELETE',\r\n        })\r\n        .then(response => {\r\n          // 檢查回應的狀態碼，204 表示成功刪除\r\n          if (response.status === 204) {\r\n            // 從 products 陣列中移除已刪除的商品\r\n            this.products = this.products.filter(product => product.productId !== productId);\r\n          } else {\r\n            console.error('刪除商品時發生錯誤');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('刪除商品時發生錯誤:', error);\r\n        });\r\n    },\r\n\r\n    editProduct(product) {\r\n        // 顯示編輯表單並填入該商品的資訊\r\n        this.editProductFormVisible = true;\r\n        this.editedProduct = { ...product };\r\n      }\r\n    },\r\n    updateProduct() {\r\n        // 使用 fetch 發送 PUT 請求給後端 API\r\n        fetch(`/api/products/${this.editedProduct.productId}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n            'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(this.editedProduct),\r\n        })\r\n        .then(response => {\r\n            if (response.status === 200) {\r\n                return response.json();\r\n            }\r\n            else {\r\n                throw new Error('更新商品時發生錯誤');\r\n            }\r\n        })\r\n        .then(data => {\r\n            // 在前端更新商品資料\r\n            const index = this.products.findIndex(product => product.productId === data.productId);\r\n            if (index !== -1) {\r\n            this.products[index] = data;\r\n            }\r\n\r\n            // 關閉編輯表單\r\n            this.editProductFormVisible = false;\r\n        })\r\n        .catch(error => {\r\n            console.error(error);\r\n        });\r\n        }\r\n    }\r\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}