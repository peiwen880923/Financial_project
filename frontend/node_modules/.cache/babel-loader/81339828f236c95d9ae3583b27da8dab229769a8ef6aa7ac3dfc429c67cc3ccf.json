{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      products: [],\n      newProduct: {\n        productName: '',\n        productPrice: 0,\n        feeRate: 0,\n        account: '',\n        quantity: 0,\n        email: ''\n      }\n    };\n  },\n  methods: {\n    addProduct() {\n      if (this.newProduct.productPrice <= 0 || this.newProduct.quantity <= 0) {\n        alert('產品價格和購買數量必須大於 0');\n        return;\n      }\n      this.products.push(this.newProduct);\n      fetch('/api/products', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.newProduct)\n      }).then(response => response.json()).then(data => {\n        // this.products.push(data);\n\n        this.newProduct = {\n          productName: '',\n          productPrice: 0,\n          feeRate: 0,\n          account: '',\n          quantity: 0\n        };\n      }).catch(error => {\n        console.error('新增商品時發生錯誤:', error);\n      });\n    },\n    deleteProduct(productId) {\n      this.products = this.products.filter(product => product.productId !== productId);\n      fetch(`/api/products/${productId}`, {\n        method: 'DELETE'\n      }).then(response => {\n        if (response.status === 204) {\n          this.products = this.products.filter(product => product.productId !== productId);\n        } else {\n          console.error('刪除商品時發生錯誤');\n        }\n      }).catch(error => {\n        console.error('刪除商品時發生錯誤:', error);\n      });\n    },\n    editProduct(product) {\n      this.editProductFormVisible = true;\n      this.editedProduct = {\n        ...product\n      };\n    }\n  }\n};","map":{"version":3,"names":["data","products","newProduct","productName","productPrice","feeRate","account","quantity","email","methods","addProduct","alert","push","fetch","method","headers","body","JSON","stringify","then","response","json","catch","error","console","deleteProduct","productId","filter","product","status","editProduct","editProductFormVisible","editedProduct"],"sources":["C:\\Users\\User\\Documents\\GitHub\\Financial-System\\Front end\\src\\views\\aa.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\" class=\"container mt-3\">\r\n\r\n  <h1>金融商品喜好紀錄系統</h1>\r\n    <div>\r\n      <h2>新增商品</h2>\r\n      <form @submit.prevent=\"addProduct\">\r\n        <label for=\"productName\">產品名稱　</label>\r\n        <input type=\"text\" v-model=\"newProduct.productName\"  required>\r\n        <br><br>\r\n        <label for=\"productPrice\">產品價格　</label>\r\n        <input type=\"text\" v-model=\"newProduct.productPrice\" required>\r\n        <br><br>\r\n        <label for=\"feeRate\">手續費率　</label>\r\n        <input type=\"text\" v-model=\"newProduct.feeRate\" required>\r\n        <br><br>\r\n        <label for=\"account\">扣款的帳號　</label>\r\n        <input type=\"text\" v-model=\"newProduct.account\" required>\r\n        <br><br>\r\n        <label for=\"quantity\">購買數量　</label>\r\n        <input type=\"text\" v-model=\"newProduct.quantity\" required>\r\n        <br><br>\r\n        <button type=\"submit\" class=\"btn btn-primary\">新增</button>\r\n      </form>\r\n    </div>\r\n    <h2>查詢喜好金融商品清單</h2>\r\n    <table class=\"table mt-4\">\r\n      <thead>\r\n        <tr>     \r\n          <th width=\"10%\">產品名稱</th>\r\n          <th width=\"10%\">產品價格</th>\r\n          <th width=\"10%\">手續費率</th>\r\n          <th width=\"10%\">扣款總金額</th>\r\n          <th width=\"10%\">總手續費用</th>\r\n          <th width=\"10%\">扣款帳號</th>\r\n          <th width=\"10%\">使用者聯絡電子信箱</th>\r\n          <th width=\"10%\">操作</th>     \r\n        </tr> \r\n        </thead>    \r\n        <tbody>\r\n            <tr v-for=\"product in products\" :key=\"product.productId\">\r\n              <td>{{ product.productName }}</td>\r\n              <td>{{ product.productPrice }}</td>\r\n              <td>{{ product.feeRate }}</td>\r\n              <td>{{ product.productPrice * product.quantity }}</td>\r\n              <td>{{ product.feeRate * product.productPrice * product.quantity }}</td>\r\n              <td>{{ product.account }}</td>\r\n              <td>{{ product.email }}</td>\r\n              <td>\r\n                <button @click=\"deleteProduct(product.productId)\" >刪除</button>\r\n                <button @click=\"editProduct(product)\">編輯</button>\r\n              </td>\r\n            </tr>\r\n        </tbody> \r\n      </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default{\r\n  data() {\r\n    return{\r\n      products: [],\r\n      newProduct: {\r\n        productName: '',\r\n        productPrice: 0,\r\n        feeRate: 0,\r\n        account: '',\r\n        quantity: 0,\r\n        email: '',\r\n      },\r\n    }\r\n  },\r\n  methods: {\r\n    addProduct() {\r\n      if (this.newProduct.productPrice <= 0 || this.newProduct.quantity <= 0) {\r\n        alert('產品價格和購買數量必須大於 0');\r\n        return;\r\n      }\r\n      this.products.push(this.newProduct);\r\n      fetch('/api/products', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(this.newProduct),\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n       // this.products.push(data);\r\n\r\n        this.newProduct = {\r\n          productName: '',\r\n          productPrice: 0,\r\n          feeRate: 0,\r\n          account: '',\r\n          quantity: 0,\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('新增商品時發生錯誤:', error);\r\n      });\r\n    },\r\n\r\n    deleteProduct(productId) {\r\n      this.products = this.products.filter(product => product.productId !== productId);\r\n      fetch(`/api/products/${productId}`, {\r\n        method: 'DELETE',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 204) {\r\n          this.products = this.products.filter(product => product.productId !== productId);\r\n        } \r\n        else {\r\n          console.error('刪除商品時發生錯誤');\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('刪除商品時發生錯誤:', error);\r\n      });\r\n    },\r\n\r\n    editProduct(product) {\r\n      this.editProductFormVisible = true;\r\n      this.editedProduct = { ...product };\r\n    }\r\n    ,\r\n  }\r\n}\r\n</script>"],"mappings":";AA2DA,eAAc;EACZA,IAAIA,CAAA,EAAG;IACL,OAAM;MACJC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE;QACVC,WAAW,EAAE,EAAE;QACfC,YAAY,EAAE,CAAC;QACfC,OAAO,EAAE,CAAC;QACVC,OAAO,EAAE,EAAE;QACXC,QAAQ,EAAE,CAAC;QACXC,KAAK,EAAE;MACT;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX,IAAI,IAAI,CAACR,UAAU,CAACE,YAAW,IAAK,KAAK,IAAI,CAACF,UAAU,CAACK,QAAO,IAAK,CAAC,EAAE;QACtEI,KAAK,CAAC,iBAAiB,CAAC;QACxB;MACF;MACA,IAAI,CAACV,QAAQ,CAACW,IAAI,CAAC,IAAI,CAACV,UAAU,CAAC;MACnCW,KAAK,CAAC,eAAe,EAAE;QACrBC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAAChB,UAAU;MACtC,CAAC,EACAiB,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAChCF,IAAI,CAACnB,IAAG,IAAK;QACb;;QAEC,IAAI,CAACE,UAAS,GAAI;UAChBC,WAAW,EAAE,EAAE;UACfC,YAAY,EAAE,CAAC;UACfC,OAAO,EAAE,CAAC;UACVC,OAAO,EAAE,EAAE;UACXC,QAAQ,EAAE;QACZ,CAAC;MACH,CAAC,EACAe,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;MACpC,CAAC,CAAC;IACJ,CAAC;IAEDE,aAAaA,CAACC,SAAS,EAAE;MACvB,IAAI,CAACzB,QAAO,GAAI,IAAI,CAACA,QAAQ,CAAC0B,MAAM,CAACC,OAAM,IAAKA,OAAO,CAACF,SAAQ,KAAMA,SAAS,CAAC;MAChFb,KAAK,CAAE,iBAAgBa,SAAU,EAAC,EAAE;QAClCZ,MAAM,EAAE;MACV,CAAC,EACAK,IAAI,CAACC,QAAO,IAAK;QAChB,IAAIA,QAAQ,CAACS,MAAK,KAAM,GAAG,EAAE;UAC3B,IAAI,CAAC5B,QAAO,GAAI,IAAI,CAACA,QAAQ,CAAC0B,MAAM,CAACC,OAAM,IAAKA,OAAO,CAACF,SAAQ,KAAMA,SAAS,CAAC;QAClF,OACK;UACHF,OAAO,CAACD,KAAK,CAAC,WAAW,CAAC;QAC5B;MACF,CAAC,EACAD,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;MACpC,CAAC,CAAC;IACJ,CAAC;IAEDO,WAAWA,CAACF,OAAO,EAAE;MACnB,IAAI,CAACG,sBAAqB,GAAI,IAAI;MAClC,IAAI,CAACC,aAAY,GAAI;QAAE,GAAGJ;MAAQ,CAAC;IACrC;EAEF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}